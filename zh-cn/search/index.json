[{"content":"前言 学校的操作系统实验资料通过腾讯微云分享\n但之前不怎么用腾讯微云（百度、夸克、阿里都有账号）\n故于实验环境安装等待中思索———\n有没有方法能把所有云盘统一起来管理？\n于是找到了Alist\nAlist简介 Alist， 一个支持多种存储的文件列表程序。\nAlist安装 桌面版（付费） 定价如下：\n命令行版（免费） 定价如下：\n安装过程 1、官网下载对应版本的CLI https://github.com/AlistGo/alist/releases\n2、在exe目录下输入 alist.exe admin set 你的密码 初始化管理员账号 3、alist.exe server 启动本地服务 4、打开浏览器地址栏输入 localhost:5244 打开管理页面 （图中所示是已经配置好的云盘，请忽略） 5、添加云盘 官方文档很详细（yin wei wo lan） https://alist.nn.ci/zh/guide/drivers/common.html\nTips： 1、云盘挂载 为能够更方便使用，可将云盘挂载到本地。\n云盘本地挂载是一种将云存储服务直接映射到本地文件系统的方法 步骤：\n1、安装RaiDrive\nRaiDrive下载地址：https://www.raidrive.com/download\n2、安装完后，打开软件可以看到这个界面，点击添加\n3、按图中标注配置 4、最后点击连接，连接成功后挂载的本地文件夹会弹窗\n（8 EB = 8,000,000,000 GB）\n（是的，你没看错😂）\n2、无服务器部署替代方法 由于之前买的腾讯云到期，无法部署到云，每次使用都要在本地启动服务，很麻烦。\n通过添加开机自启可解决这个问题\n1、在有alist.exe的目录下创建一个vbs文件\n2、然后写入内容\n1 2 3 Dim ws Set ws = Wscript.CreateObject(\u0026#34;Wscript.Shell\u0026#34;) ws.run \u0026#34;cmd /c .\\alist.exe server\u0026#34;,vbhide 注意把alist.exe路径改为你的路径! 3、再打开window的计划任务程序，具体步骤如下图\n①输入任务名 ②创建任务 ③触发器设置 ④操作设置，程序路径为上述vbs脚本路径 ⑤将RaiDrive软件中的随系统自动启动打开 ⑥设置完成，亲测此方法很稳\n","date":"2024-11-02T19:05:19+08:00","image":"https://Rainaftbow.github.io/zh-cn/p/alist/cover_hu5665874167637713921.png","permalink":"https://Rainaftbow.github.io/zh-cn/p/alist/","title":"个人云盘管理平台"},{"content":"Git介绍 Git是目前世界上最先进的分布式版本控制系统，由Linux的创始人Linus创建。\nGit基础知识 文件系统： 我们可以把硬盘理解成一本汉语词典，词典前面的目录索引就是文件系统，能帮助我们快速找到文件内容的具体位置。\n通常我们也只会通过索引去找文件，在windows中的我的电脑就是一个索引系统，索引里面没有的文件我们就 “找不到”。\n我们知道从操作系统删除文件，其实只是删除了索引，具体文件内容还是存在硬盘上的，虽然我们通过索引找不到，但是我们可以通过内容去查找（利用一些恢复工具）。\n.git仓库： 就是 Git 用来存储所有版本控制信息的地方，文件信息存放在.git/objects目录中，直接打开是乱码，只有新增和修改过的文件才会存入 git仓库，删除的时候并不会从仓库移除文件。\nHEAD： git的版本日志或版本号，通过git log 我们可以看到很多的编号，并通过修改head指针来切换版本，每个版本关联一份快照，每个关照关联一系列文件，就是“HEAD-\u0026gt;快照-\u0026gt;仓库文件”这样一个关系链，我们可以很轻松的通过移动HEAD指针来改变我们的工作区文件。\n暂存区/缓冲区： 暂存区并不存放文件内容，暂存区仅仅是一份处于编辑状态的快照（索引文件），这份快照没有编号。commit就是把暂存区保存到版本库，并给版本日志新增一个编号（HEAD/版本号）指向这个快照副本。\ngit快照： 我们知道git是通过快照来管理版本的，快照就是git的文件系统，就是我们说的汉语词典的索引，每次commit就是创建一份快照，并给快照起一个编号，这个编号就是HEAD。\n工作区： 工作区就是除开.git目录的其他东西。通过操作系统的文件索引来管理的内容。就是我们正常使用电脑的时候所看到，能编辑的内容。\n分支： 分支其实就是上面说到的版本日志,一个分支就是一个版本分组，每个分支记录该分支上的所有HEAD，“分支-\u0026gt;HEAD-\u0026gt;快照-\u0026gt;仓库文件”\n命令 Git的基本命令:\ngit init # 初始化，git从此开始追踪每一个更改 git status # 查看工作区与暂存区状态 git add # 从工作区添加到暂存区 git reset # 从暂存区删除返回工作区 git checkout -- \u0026lt;file|folder\u0026gt; # 删除工作区内容 git commit [-m] [string] [--amend] # 暂存区提交到本地仓库 git log [--all] [--graph] # 查看日志消息 git config --global user.name \u0026quot;name\u0026quot; # 设置名字 git config --global user.name \u0026quot;xxx@email.com\u0026quot; # 设置邮箱 git checkout \u0026lt;hash\u0026gt; # 所有文件切换到指定的历史版本（创建新的分支） git checkout \u0026lt;hash\u0026gt; \u0026lt;file\u0026gt; # 指定文件切换到指定的历史版本（不会创建新的分支） 杂项: git config --global alias.s \u0026quot;status\u0026quot; # 设置快捷方式(很有用，化\u0026quot;commit -m\u0026quot;为\u0026quot;cm\u0026quot;) .gitignore # 文件记录哪些文件要忽略(比如其自身与本文档) 且对在gitignore添加前就已被git记录过的文件无效 rm -rf .git #删除项目中的git仓库 仓库架构 结构名 解释 Directory 使用Git管理的一个目录，也就是一个仓库，包含我们的工作空间和Git的管理空间。 WorkSpace 需要通过Git进行版本控制的目录和文件，这些目录和文件组成了工作空间，除了.git之外的都属于工作区。 .git 存放Git管理信息的目录，初始化仓库的时候自动创建。 Index/Stage 暂存区，或者叫待提交更新区，在提交进入repo之前，我们可以把所有的更新放在暂存区。 Local Repo 本地仓库，一个存放在本地的版本库；HEAD会只是当前的开发分支（branch）。 Stash 是一个工作状态保存栈，用于保存/恢复WorkSpace中的临时状态。 Git命令执行过程 参考:Git 仓库结构 （一）\nGit备忘录 PDF版 ","date":"2024-10-22T12:27:24+08:00","image":"https://Rainaftbow.github.io/zh-cn/p/git-learn/cover_hu4021689338079846508.jpg","permalink":"https://Rainaftbow.github.io/zh-cn/p/git-learn/","title":"Git"},{"content":"自然 人物 ","date":"2024-10-22T01:33:45+08:00","image":"https://Rainaftbow.github.io/zh-cn/p/4kpics/10_hu10068010454105284304.png","permalink":"https://Rainaftbow.github.io/zh-cn/p/4kpics/","title":"图集[1]"}]